[INFO ] 2021-01-10T01:39:39,243Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/mrjain/yellow-webserver/workflows ... {}
[INFO ] 2021-01-10T01:39:39,383Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-01-10T01:39:40,566Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-01-10T01:39:41,797Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-01-10T01:39:41,808Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-01-10T01:39:41,808Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-01-10T01:39:42,415Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-01-10T01:39:42,437Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-01-10T01:39:43,143Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-01-10T01:39:43,143Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-01-10T01:39:43,143Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-01-10T01:39:43,210Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-01-10T01:39:43,220Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-01-10T01:39:43,559Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-01-10T01:39:43,905Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-01-10T01:39:43,905Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-01-10T01:39:43,937Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-01-10T01:39:43,947Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-01-10T01:39:43,947Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-01-10T01:39:44,709Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-01-10T01:39:44,709Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-01-10T01:39:44,798Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-01-10T01:39:44,798Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-01-10T01:39:44,929Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-01-10T01:39:44,929Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-01-10T01:39:45,076Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:45,106Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-01-10T01:39:45,168Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-01-10T01:39:45,231Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-01-10T01:39:45,232Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-01-10T01:39:45,243Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-01-10T01:39:45,255Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-01-10T01:39:45,255Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-01-10T01:39:45,293Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:45,293Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-01-10T01:39:45,303Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:45,304Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-01-10T01:39:45,304Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:45,304Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,315Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-01-10T01:39:45,347Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,347Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-01-10T01:39:45,357Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,358Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-01-10T01:39:45,358Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,358Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-01-10T01:39:45,358Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,369Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:45,369Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-01-10T01:39:45,379Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:45,379Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-01-10T01:39:45,379Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-01-10T01:39:45,411Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-01-10T01:39:45,411Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-01-10T01:39:45,412Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-01-10T01:39:45,412Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-01-10T01:39:45,412Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-01-10T01:39:45,424Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:45,424Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-01-10T01:39:45,424Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:45,424Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-01-10T01:39:45,424Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:45,442Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,443Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-01-10T01:39:45,463Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,464Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-01-10T01:39:45,474Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,474Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-01-10T01:39:45,474Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,474Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-01-10T01:39:45,474Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,474Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-01-10T01:39:45,474Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,474Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-01-10T01:39:45,474Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-01-10T01:39:45,474Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:45,475Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-01-10T01:39:47,111Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-01-10T01:39:47,123Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-01-10T01:39:47,123Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-01-10T01:39:47,123Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-01-10T01:39:47,136Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-01-10T01:39:47,146Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/mrjain/yellow-webserver/.gradle {}
[INFO ] 2021-01-10T01:39:47,147Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-01-10T01:39:47,169Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-01-10T01:39:51,411Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/0/cordapps] {}
[INFO ] 2021-01-10T01:39:51,425Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/0/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/0/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:39:51,436Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/0/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:39:51,526Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/0/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:39:52,660Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:39:52,791Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:39:52,817Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:39:52,898Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:39:53,035Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:39:35.962Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:39:56,298Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:39:56,362Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:39:56,365Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:39:58,378Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:39:58,599Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:39:58,599Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242798599) {}
[INFO ] 2021-01-10T01:39:58,605Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:39:58,737Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242798599) {}
[INFO ] 2021-01-10T01:39:58,785Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:39:58,797Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:39:58,799Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:39:58,802Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242798599) {}
[INFO ] 2021-01-10T01:39:58,824Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:39:58,898Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:39:58,910Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-01-10T01:39:59,304Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242798599) {}
[INFO ] 2021-01-10T01:39:59,312Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242798599) {}
[INFO ] 2021-01-10T01:39:59,313Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:39:59,314Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242798599) {}
[INFO ] 2021-01-10T01:39:59,314Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:39:59,322Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/1/cordapps] {}
[INFO ] 2021-01-10T01:39:59,322Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/1/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/1/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:39:59,322Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/1/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:39:59,328Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/1/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:39:59,353Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:39:59,354Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:39:59,355Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:39:59,610Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:39:59,614Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:39:35.962Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:39:59,925Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:39:59,928Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:39:59,928Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:00,057Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:00,058Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:00,076Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:00,076Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242800076) {}
[INFO ] 2021-01-10T01:40:00,078Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:00,084Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242800076) {}
[INFO ] 2021-01-10T01:40:00,091Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:00,091Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:00,092Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:00,095Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242800076) {}
[INFO ] 2021-01-10T01:40:00,099Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:00,122Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:00,142Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242800076) {}
[INFO ] 2021-01-10T01:40:00,142Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242798599) {}
[INFO ] 2021-01-10T01:40:00,143Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:00,155Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242800076) {}
[INFO ] 2021-01-10T01:40:00,156Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:00,166Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242800076) {}
[INFO ] 2021-01-10T01:40:00,166Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:00,167Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242800076) {}
[INFO ] 2021-01-10T01:40:00,167Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:00,176Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/2/cordapps] {}
[INFO ] 2021-01-10T01:40:00,176Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/2/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/2/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:00,177Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/2/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:00,185Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-013937.927-98E565C5EF29BDBA/nodes/2/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:00,208Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:00,208Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:00,209Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:00,232Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:00,235Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:39:35.962Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:00,463Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:00,464Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:00,464Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:00,565Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:00,566Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:00,582Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:00,582Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242800582) {}
[INFO ] 2021-01-10T01:40:00,584Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:00,592Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242800582) {}
[INFO ] 2021-01-10T01:40:00,597Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:00,597Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:00,598Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:00,599Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242800582) {}
[INFO ] 2021-01-10T01:40:00,603Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:00,623Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:00,637Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242800582) {}
[INFO ] 2021-01-10T01:40:00,637Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242798599) {}
[INFO ] 2021-01-10T01:40:00,638Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:00,645Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242800582) {}
[INFO ] 2021-01-10T01:40:00,647Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:00,659Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242800076) {}
[INFO ] 2021-01-10T01:40:00,660Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:00,668Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242800582) {}
[INFO ] 2021-01-10T01:40:00,669Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:00,676Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242800582) {}
[INFO ] 2021-01-10T01:40:00,676Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:00,676Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242800582) {}
[INFO ] 2021-01-10T01:40:00,676Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2021-01-10T01:40:00,898Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
[WARN ] 2021-01-10T01:40:00,898Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
[ERROR] 2021-01-10T01:40:01,061Z [Mock network] internal.Verifier. - Error validating transaction EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:625) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:108) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_275]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_275]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[ERROR] 2021-01-10T01:40:01,064Z [Mock network] internal.Verifier. - Error validating transaction EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:108) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_275]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_275]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
[INFO ] 2021-01-10T01:40:01,064Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
[INFO ] 2021-01-10T01:40:01,069Z [Mock network] statemachine.StaffedFlowHospital. - Flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c05e4ed1-699e-4c53-9825-ab7af29b176d, timestamp: 2021-01-10T01:40:00.719Z, entityType: Invocation, sessionId=c05e4ed1-699e-4c53-9825-ab7af29b176d, timestamp: 2021-01-10T01:40:00.719Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows, corDappHash=2663933CAFB600C1C42754AF99BD5EC863AF4983AF6ED960FF4E6DF5BB6C542C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=28395C1A07C7D6CD590647AE83DF1F05A7027812B76EA001CB24ADEDCB9FDB6E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@51966df8, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=5474c911-8c2b-4e72-8425-5341e416d0ab, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@4ab21945[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
[INFO ] 2021-01-10T01:40:01,071Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:429) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:108) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_275]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_275]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	... 19 more
[INFO ] 2021-01-10T01:40:01,074Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:429) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:108) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_275]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_275]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	... 19 more
[WARN ] 2021-01-10T01:40:01,087Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] errored, dumping all transitions:

 --- Transition of flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] ---
  Timestamp: 2021-01-10T01:40:00.872Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[05a930d7-1ef8-4bbd-a33c-d8461e22ab67], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c05e4ed1-699e-4c53-9825-ab7af29b176d, timestamp: 2021-01-10T01:40:00.719Z, entityType: Invocation, sessionId=c05e4ed1-699e-4c53-9825-ab7af29b176d, timestamp: 2021-01-10T01:40:00.719Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows, corDappHash=2663933CAFB600C1C42754AF99BD5EC863AF4983AF6ED960FF4E6DF5BB6C542C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=28395C1A07C7D6CD590647AE83DF1F05A7027812B76EA001CB24ADEDCB9FDB6E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a6823cf])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a6823cf])
    SignalFlowHasStarted(flowId=[05a930d7-1ef8-4bbd-a33c-d8461e22ab67])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a6823cf]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] ---
  Timestamp: 2021-01-10T01:40:01.076Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2121303475274079741, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-01-10T01:40:00.824Z
    2021-01-10T01:40:01.067Z


 --- Transition of flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] ---
  Timestamp: 2021-01-10T01:40:01.079Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] ---
  Timestamp: 2021-01-10T01:40:01.081Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-01-10T01:40:01.067Z
    2021-01-10T01:40:01.081Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
[WARN ] 2021-01-10T01:40:01,087Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:429) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:108) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_275]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_275]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	... 19 more
[WARN ] 2021-01-10T01:40:01,094Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:429) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:108) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_275]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_275]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	... 19 more
[WARN ] 2021-01-10T01:40:01,126Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] errored, dumping all transitions:

 --- Transition of flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] ---
  Timestamp: 2021-01-10T01:40:00.872Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[05a930d7-1ef8-4bbd-a33c-d8461e22ab67], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c05e4ed1-699e-4c53-9825-ab7af29b176d, timestamp: 2021-01-10T01:40:00.719Z, entityType: Invocation, sessionId=c05e4ed1-699e-4c53-9825-ab7af29b176d, timestamp: 2021-01-10T01:40:00.719Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows, corDappHash=2663933CAFB600C1C42754AF99BD5EC863AF4983AF6ED960FF4E6DF5BB6C542C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=28395C1A07C7D6CD590647AE83DF1F05A7027812B76EA001CB24ADEDCB9FDB6E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a6823cf])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a6823cf])
    SignalFlowHasStarted(flowId=[05a930d7-1ef8-4bbd-a33c-d8461e22ab67])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a6823cf]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] ---
  Timestamp: 2021-01-10T01:40:01.076Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2121303475274079741, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-01-10T01:40:00.824Z
    2021-01-10T01:40:01.067Z


 --- Transition of flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] ---
  Timestamp: 2021-01-10T01:40:01.079Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] ---
  Timestamp: 2021-01-10T01:40:01.081Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-01-10T01:40:01.067Z
    2021-01-10T01:40:01.081Z


 --- Transition of flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] ---
  Timestamp: 2021-01-10T01:40:01.121Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B, errorId=2121303475274079741)], sessions=[], senderUUID=5474c911-8c2b-4e72-8425-5341e416d0ab)
    CreateTransaction
    RemoveCheckpoint(id=[05a930d7-1ef8-4bbd-a33c-d8461e22ab67], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=05a930d7-1ef8-4bbd-a33c-d8461e22ab67)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[05a930d7-1ef8-4bbd-a33c-d8461e22ab67], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2121303475274079741, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=c05e4ed1-699e-4c53-9825-ab7af29b176d, timestamp: 2021-01-10T01:40:00.719Z, entityType: Invocation, sessionId=c05e4ed1-699e-4c53-9825-ab7af29b176d, timestamp: 2021-01-10T01:40:00.719Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=8, corDappName=workflows, corDappHash=2663933CAFB600C1C42754AF99BD5EC863AF4983AF6ED960FF4E6DF5BB6C542C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@610eb014, errorState=Errored(errors=[FlowError(errorId=2121303475274079741, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@51966df8, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=5474c911-8c2b-4e72-8425-5341e416d0ab, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@4ab21945[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.timestamp: 
    2021-01-10T01:40:01.081Z
    2021-01-10T01:40:01.087Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=28395C1A07C7D6CD590647AE83DF1F05A7027812B76EA001CB24ADEDCB9FDB6E)
    net.corda.node.services.statemachine.FlowState$Finished@610eb014
checkpoint.status: 
    RUNNABLE
    FAILED
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
[WARN ] 2021-01-10T01:40:01,126Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [05a930d7-1ef8-4bbd-a33c-d8461e22ab67] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=05a930d7-1ef8-4bbd-a33c-d8461e22ab67, invocation_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, invocation_timestamp=2021-01-10T01:40:00.719Z, origin=Only For Testing, session_id=c05e4ed1-699e-4c53-9825-ab7af29b176d, session_timestamp=2021-01-10T01:40:00.719Z, thread-id=383}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: EB3892E770767C913E16CE26FC375D617D846BB9205976E3ED6873C52F82A79B
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:429) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:379) ~[corda-core-4.6.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:212) ~[corda-core-4.6.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:633) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:108) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.6.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.6.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_275]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_275]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_275]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_275]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.6.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.lambda$verify$0(IOUContract.java:50) ~[contracts.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.6.jar:?]
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.java:37) ~[contracts.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:427) ~[corda-core-4.6.jar:?]
	... 19 more
[INFO ] 2021-01-10T01:40:01,156Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-01-10T01:40:01,170Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:01,170Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:01,172Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-01-10T01:40:01,185Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:01,185Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:01,186Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-01-10T01:40:01,192Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:01,192Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:01,263Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/0/cordapps] {}
[INFO ] 2021-01-10T01:40:01,264Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/0/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/0/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:01,264Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/0/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:01,269Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/0/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:01,288Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:01,288Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:01,289Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:01,294Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:01,298Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:01.197Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:01,589Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:01,595Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:01,595Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:01,696Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:01,700Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:01,700Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242801700) {}
[INFO ] 2021-01-10T01:40:01,701Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:01,714Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242801700) {}
[INFO ] 2021-01-10T01:40:01,721Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:01,721Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:01,721Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:01,723Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242801700) {}
[INFO ] 2021-01-10T01:40:01,726Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:01,743Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:01,745Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-01-10T01:40:01,757Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242801700) {}
[INFO ] 2021-01-10T01:40:01,757Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242801700) {}
[INFO ] 2021-01-10T01:40:01,757Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:01,757Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242801700) {}
[INFO ] 2021-01-10T01:40:01,757Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:01,764Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/1/cordapps] {}
[INFO ] 2021-01-10T01:40:01,764Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/1/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/1/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:01,764Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/1/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:01,770Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/1/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:01,786Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:01,787Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:01,787Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:01,812Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:01,817Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:01.197Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:02,014Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:02,015Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:02,015Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:02,107Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:02,109Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:02,125Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:02,125Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242802125) {}
[INFO ] 2021-01-10T01:40:02,126Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:02,133Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242802125) {}
[INFO ] 2021-01-10T01:40:02,137Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:02,138Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:02,138Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:02,139Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242802125) {}
[INFO ] 2021-01-10T01:40:02,143Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:02,159Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:02,170Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242802125) {}
[INFO ] 2021-01-10T01:40:02,170Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242801700) {}
[INFO ] 2021-01-10T01:40:02,171Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:02,176Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242802125) {}
[INFO ] 2021-01-10T01:40:02,177Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:02,182Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242802125) {}
[INFO ] 2021-01-10T01:40:02,182Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:02,182Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242802125) {}
[INFO ] 2021-01-10T01:40:02,182Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:02,187Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/2/cordapps] {}
[INFO ] 2021-01-10T01:40:02,187Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/2/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/2/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:02,187Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/2/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:02,191Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014001.197-C25FA5CABF4939E8/nodes/2/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:02,209Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:02,209Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:02,210Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:02,227Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:02,228Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:01.197Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:02,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:02,414Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:02,414Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:02,489Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:02,490Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:02,502Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:02,502Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242802502) {}
[INFO ] 2021-01-10T01:40:02,503Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:02,507Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242802502) {}
[INFO ] 2021-01-10T01:40:02,512Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:02,512Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:02,512Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:02,514Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242802502) {}
[INFO ] 2021-01-10T01:40:02,518Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:02,539Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:02,554Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242802502) {}
[INFO ] 2021-01-10T01:40:02,554Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242801700) {}
[INFO ] 2021-01-10T01:40:02,555Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:02,561Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242802502) {}
[INFO ] 2021-01-10T01:40:02,562Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:02,571Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242802125) {}
[INFO ] 2021-01-10T01:40:02,572Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:02,578Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242802502) {}
[INFO ] 2021-01-10T01:40:02,579Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:02,584Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242802502) {}
[INFO ] 2021-01-10T01:40:02,585Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:02,585Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242802502) {}
[INFO ] 2021-01-10T01:40:02,585Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:02,858Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=af19282d-4ae3-4230-b402-c1c068ef6a15, invocation_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, invocation_timestamp=2021-01-10T01:40:02.821Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, session_timestamp=2021-01-10T01:40:02.821Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:02,895Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=af19282d-4ae3-4230-b402-c1c068ef6a15, invocation_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, invocation_timestamp=2021-01-10T01:40:02.821Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, session_timestamp=2021-01-10T01:40:02.821Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:02,986Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=081aaa5d-7b1a-4e3b-b1db-d7ca625d15df, invocation_id=4542e2dc-2a72-4d90-a152-e464be0a6b97, invocation_timestamp=2021-01-10T01:40:02.586Z, origin=Only For Testing, session_id=4542e2dc-2a72-4d90-a152-e464be0a6b97, session_timestamp=2021-01-10T01:40:02.586Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:02,986Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=081aaa5d-7b1a-4e3b-b1db-d7ca625d15df, invocation_id=4542e2dc-2a72-4d90-a152-e464be0a6b97, invocation_timestamp=2021-01-10T01:40:02.586Z, origin=Only For Testing, session_id=4542e2dc-2a72-4d90-a152-e464be0a6b97, session_timestamp=2021-01-10T01:40:02.586Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:03,028Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=081aaa5d-7b1a-4e3b-b1db-d7ca625d15df, invocation_id=4542e2dc-2a72-4d90-a152-e464be0a6b97, invocation_timestamp=2021-01-10T01:40:02.586Z, origin=Only For Testing, session_id=4542e2dc-2a72-4d90-a152-e464be0a6b97, session_timestamp=2021-01-10T01:40:02.586Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:03,050Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=af19282d-4ae3-4230-b402-c1c068ef6a15, invocation_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, invocation_timestamp=2021-01-10T01:40:02.821Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, session_timestamp=2021-01-10T01:40:02.821Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:03,060Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=af19282d-4ae3-4230-b402-c1c068ef6a15, invocation_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, invocation_timestamp=2021-01-10T01:40:02.821Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, session_timestamp=2021-01-10T01:40:02.821Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:03,063Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=af19282d-4ae3-4230-b402-c1c068ef6a15, invocation_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, invocation_timestamp=2021-01-10T01:40:02.821Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, session_timestamp=2021-01-10T01:40:02.821Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:03,072Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=af19282d-4ae3-4230-b402-c1c068ef6a15, invocation_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, invocation_timestamp=2021-01-10T01:40:02.821Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4ebe8bc-31be-4ba0-ace5-6b3fde5b109f, session_timestamp=2021-01-10T01:40:02.821Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:03,087Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=081aaa5d-7b1a-4e3b-b1db-d7ca625d15df, invocation_id=4542e2dc-2a72-4d90-a152-e464be0a6b97, invocation_timestamp=2021-01-10T01:40:02.586Z, origin=Only For Testing, session_id=4542e2dc-2a72-4d90-a152-e464be0a6b97, session_timestamp=2021-01-10T01:40:02.586Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:03,087Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=081aaa5d-7b1a-4e3b-b1db-d7ca625d15df, invocation_id=4542e2dc-2a72-4d90-a152-e464be0a6b97, invocation_timestamp=2021-01-10T01:40:02.586Z, origin=Only For Testing, session_id=4542e2dc-2a72-4d90-a152-e464be0a6b97, session_timestamp=2021-01-10T01:40:02.586Z, thread-id=714, tx_id=D7905C6DB04C63D50CE76426E7FA2C0E265226B6C12FE2C441992AEFB1B5EEEF}
[INFO ] 2021-01-10T01:40:03,095Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-01-10T01:40:03,101Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:03,101Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:03,102Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2021-01-10T01:40:03,107Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:03,107Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:03,108Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2021-01-10T01:40:03,112Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:03,112Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:03,172Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/0/cordapps] {}
[INFO ] 2021-01-10T01:40:03,172Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/0/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/0/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:03,172Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/0/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:03,178Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/0/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:03,197Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:03,198Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:03,199Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:03,202Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:03,208Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:03.113Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:03,469Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:03,474Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:03,474Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:03,560Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:03,564Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:03,564Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242803564) {}
[INFO ] 2021-01-10T01:40:03,565Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:03,577Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242803564) {}
[INFO ] 2021-01-10T01:40:03,583Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:03,583Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:03,583Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:03,585Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242803564) {}
[INFO ] 2021-01-10T01:40:03,588Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:03,605Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:03,607Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-01-10T01:40:03,617Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242803564) {}
[INFO ] 2021-01-10T01:40:03,618Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242803564) {}
[INFO ] 2021-01-10T01:40:03,618Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:03,618Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242803564) {}
[INFO ] 2021-01-10T01:40:03,618Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:03,623Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/1/cordapps] {}
[INFO ] 2021-01-10T01:40:03,623Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/1/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/1/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:03,623Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/1/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:03,628Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/1/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:03,644Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:03,645Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:03,646Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:03,662Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:03,664Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:03.113Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:03,863Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:03,865Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:03,865Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:03,932Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:03,933Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:03,945Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:03,945Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242803945) {}
[INFO ] 2021-01-10T01:40:03,946Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:03,949Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242803945) {}
[INFO ] 2021-01-10T01:40:03,960Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:03,961Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:03,961Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:03,963Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242803945) {}
[INFO ] 2021-01-10T01:40:03,965Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:03,981Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:03,990Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242803945) {}
[INFO ] 2021-01-10T01:40:03,990Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242803564) {}
[INFO ] 2021-01-10T01:40:03,991Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:03,997Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242803945) {}
[INFO ] 2021-01-10T01:40:03,998Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:04,004Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242803945) {}
[INFO ] 2021-01-10T01:40:04,004Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:04,004Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242803945) {}
[INFO ] 2021-01-10T01:40:04,004Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:04,009Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/2/cordapps] {}
[INFO ] 2021-01-10T01:40:04,009Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/2/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/2/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:04,009Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/2/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:04,015Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014003.113-81E50DC4AD4115F4/nodes/2/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:04,032Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:04,032Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:04,033Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:04,055Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:04,056Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:03.113Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:04,235Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:04,236Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:04,236Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:04,303Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:04,304Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:04,316Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:04,316Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242804316) {}
[INFO ] 2021-01-10T01:40:04,317Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:04,320Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242804316) {}
[INFO ] 2021-01-10T01:40:04,324Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:04,324Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:04,324Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:04,326Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242804316) {}
[INFO ] 2021-01-10T01:40:04,329Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:04,344Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:04,355Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242804316) {}
[INFO ] 2021-01-10T01:40:04,355Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242803564) {}
[INFO ] 2021-01-10T01:40:04,356Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:04,360Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242804316) {}
[INFO ] 2021-01-10T01:40:04,361Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:04,365Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242803945) {}
[INFO ] 2021-01-10T01:40:04,366Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:04,370Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242804316) {}
[INFO ] 2021-01-10T01:40:04,371Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:04,375Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242804316) {}
[INFO ] 2021-01-10T01:40:04,375Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:04,375Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242804316) {}
[INFO ] 2021-01-10T01:40:04,375Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:04,481Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=9527e17f-aa6a-4388-84be-d9941068487b, invocation_id=e7203006-fd22-49dd-af39-a20ff83f0af8, invocation_timestamp=2021-01-10T01:40:04.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e7203006-fd22-49dd-af39-a20ff83f0af8, session_timestamp=2021-01-10T01:40:04.461Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,490Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=9527e17f-aa6a-4388-84be-d9941068487b, invocation_id=e7203006-fd22-49dd-af39-a20ff83f0af8, invocation_timestamp=2021-01-10T01:40:04.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e7203006-fd22-49dd-af39-a20ff83f0af8, session_timestamp=2021-01-10T01:40:04.461Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,561Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ea443c27-f188-40d2-93b1-93f4e59b1d11, invocation_id=7f9f12b8-8684-4b68-ac18-0c8f71222e45, invocation_timestamp=2021-01-10T01:40:04.376Z, origin=Only For Testing, session_id=7f9f12b8-8684-4b68-ac18-0c8f71222e45, session_timestamp=2021-01-10T01:40:04.376Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,561Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ea443c27-f188-40d2-93b1-93f4e59b1d11, invocation_id=7f9f12b8-8684-4b68-ac18-0c8f71222e45, invocation_timestamp=2021-01-10T01:40:04.376Z, origin=Only For Testing, session_id=7f9f12b8-8684-4b68-ac18-0c8f71222e45, session_timestamp=2021-01-10T01:40:04.376Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,574Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ea443c27-f188-40d2-93b1-93f4e59b1d11, invocation_id=7f9f12b8-8684-4b68-ac18-0c8f71222e45, invocation_timestamp=2021-01-10T01:40:04.376Z, origin=Only For Testing, session_id=7f9f12b8-8684-4b68-ac18-0c8f71222e45, session_timestamp=2021-01-10T01:40:04.376Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,590Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=9527e17f-aa6a-4388-84be-d9941068487b, invocation_id=e7203006-fd22-49dd-af39-a20ff83f0af8, invocation_timestamp=2021-01-10T01:40:04.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e7203006-fd22-49dd-af39-a20ff83f0af8, session_timestamp=2021-01-10T01:40:04.461Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,604Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=9527e17f-aa6a-4388-84be-d9941068487b, invocation_id=e7203006-fd22-49dd-af39-a20ff83f0af8, invocation_timestamp=2021-01-10T01:40:04.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e7203006-fd22-49dd-af39-a20ff83f0af8, session_timestamp=2021-01-10T01:40:04.461Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,606Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=9527e17f-aa6a-4388-84be-d9941068487b, invocation_id=e7203006-fd22-49dd-af39-a20ff83f0af8, invocation_timestamp=2021-01-10T01:40:04.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e7203006-fd22-49dd-af39-a20ff83f0af8, session_timestamp=2021-01-10T01:40:04.461Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,612Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=9527e17f-aa6a-4388-84be-d9941068487b, invocation_id=e7203006-fd22-49dd-af39-a20ff83f0af8, invocation_timestamp=2021-01-10T01:40:04.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e7203006-fd22-49dd-af39-a20ff83f0af8, session_timestamp=2021-01-10T01:40:04.461Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,619Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ea443c27-f188-40d2-93b1-93f4e59b1d11, invocation_id=7f9f12b8-8684-4b68-ac18-0c8f71222e45, invocation_timestamp=2021-01-10T01:40:04.376Z, origin=Only For Testing, session_id=7f9f12b8-8684-4b68-ac18-0c8f71222e45, session_timestamp=2021-01-10T01:40:04.376Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,619Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ea443c27-f188-40d2-93b1-93f4e59b1d11, invocation_id=7f9f12b8-8684-4b68-ac18-0c8f71222e45, invocation_timestamp=2021-01-10T01:40:04.376Z, origin=Only For Testing, session_id=7f9f12b8-8684-4b68-ac18-0c8f71222e45, session_timestamp=2021-01-10T01:40:04.376Z, thread-id=1065, tx_id=ACBCF69FA96789A0B457BCB3A8C9114BC561B55307F406008994CF200DDDDABF}
[INFO ] 2021-01-10T01:40:04,626Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2021-01-10T01:40:04,630Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:04,630Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:04,631Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2021-01-10T01:40:04,638Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:04,638Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:04,638Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2021-01-10T01:40:04,643Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:04,643Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:04,707Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/0/cordapps] {}
[INFO ] 2021-01-10T01:40:04,707Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/0/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/0/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:04,707Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/0/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:04,712Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/0/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:04,731Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:04,732Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:04,733Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:04,736Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:04,739Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:04.650Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:04,957Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:04,963Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:04,963Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:05,031Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:05,034Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:05,034Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242805034) {}
[INFO ] 2021-01-10T01:40:05,035Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:05,042Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242805034) {}
[INFO ] 2021-01-10T01:40:05,048Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:05,048Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:05,048Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:05,051Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242805034) {}
[INFO ] 2021-01-10T01:40:05,054Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:05,074Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:05,075Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-01-10T01:40:05,084Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242805034) {}
[INFO ] 2021-01-10T01:40:05,084Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242805034) {}
[INFO ] 2021-01-10T01:40:05,084Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:05,084Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242805034) {}
[INFO ] 2021-01-10T01:40:05,084Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:05,089Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/1/cordapps] {}
[INFO ] 2021-01-10T01:40:05,089Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/1/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/1/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:05,089Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/1/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:05,093Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/1/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:05,105Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:05,106Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:05,107Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:05,125Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:05,127Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:04.650Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:05,281Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:05,282Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:05,282Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:05,344Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:05,345Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:05,355Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:05,355Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242805355) {}
[INFO ] 2021-01-10T01:40:05,356Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:05,360Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242805355) {}
[INFO ] 2021-01-10T01:40:05,363Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:05,363Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:05,363Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:05,371Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242805355) {}
[INFO ] 2021-01-10T01:40:05,373Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:05,388Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:05,397Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242805355) {}
[INFO ] 2021-01-10T01:40:05,397Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242805034) {}
[INFO ] 2021-01-10T01:40:05,397Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:05,402Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242805355) {}
[INFO ] 2021-01-10T01:40:05,402Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:05,407Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242805355) {}
[INFO ] 2021-01-10T01:40:05,407Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:05,407Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242805355) {}
[INFO ] 2021-01-10T01:40:05,407Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:05,411Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/2/cordapps] {}
[INFO ] 2021-01-10T01:40:05,411Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/2/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/2/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:05,411Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/2/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:05,416Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014004.650-7F0A0C29777F8A38/nodes/2/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:05,430Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:05,431Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:05,431Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:05,446Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:05,447Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:04.650Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:05,624Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:05,625Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:05,625Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:05,684Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:05,685Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:05,695Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:05,695Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242805695) {}
[INFO ] 2021-01-10T01:40:05,696Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:05,698Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242805695) {}
[INFO ] 2021-01-10T01:40:05,701Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:05,701Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:05,701Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:05,703Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242805695) {}
[INFO ] 2021-01-10T01:40:05,705Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:05,720Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:05,728Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242805695) {}
[INFO ] 2021-01-10T01:40:05,728Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242805034) {}
[INFO ] 2021-01-10T01:40:05,728Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:05,732Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242805695) {}
[INFO ] 2021-01-10T01:40:05,732Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:05,736Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242805355) {}
[INFO ] 2021-01-10T01:40:05,737Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:05,743Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242805695) {}
[INFO ] 2021-01-10T01:40:05,743Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:05,747Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242805695) {}
[INFO ] 2021-01-10T01:40:05,747Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:05,748Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242805695) {}
[INFO ] 2021-01-10T01:40:05,748Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:05,849Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=6be271e8-dc62-4af1-9e45-cd57efb4c7aa, invocation_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, invocation_timestamp=2021-01-10T01:40:05.835Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, session_timestamp=2021-01-10T01:40:05.835Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,857Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=6be271e8-dc62-4af1-9e45-cd57efb4c7aa, invocation_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, invocation_timestamp=2021-01-10T01:40:05.835Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, session_timestamp=2021-01-10T01:40:05.835Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,921Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=5b3310d4-b0e5-4bc9-9b0d-fcf8d4633b7d, invocation_id=f9959711-fd64-46db-9bfa-c174639e9a7d, invocation_timestamp=2021-01-10T01:40:05.749Z, origin=Only For Testing, session_id=f9959711-fd64-46db-9bfa-c174639e9a7d, session_timestamp=2021-01-10T01:40:05.749Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,921Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=5b3310d4-b0e5-4bc9-9b0d-fcf8d4633b7d, invocation_id=f9959711-fd64-46db-9bfa-c174639e9a7d, invocation_timestamp=2021-01-10T01:40:05.749Z, origin=Only For Testing, session_id=f9959711-fd64-46db-9bfa-c174639e9a7d, session_timestamp=2021-01-10T01:40:05.749Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,934Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=5b3310d4-b0e5-4bc9-9b0d-fcf8d4633b7d, invocation_id=f9959711-fd64-46db-9bfa-c174639e9a7d, invocation_timestamp=2021-01-10T01:40:05.749Z, origin=Only For Testing, session_id=f9959711-fd64-46db-9bfa-c174639e9a7d, session_timestamp=2021-01-10T01:40:05.749Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,951Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=6be271e8-dc62-4af1-9e45-cd57efb4c7aa, invocation_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, invocation_timestamp=2021-01-10T01:40:05.835Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, session_timestamp=2021-01-10T01:40:05.835Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,957Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=6be271e8-dc62-4af1-9e45-cd57efb4c7aa, invocation_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, invocation_timestamp=2021-01-10T01:40:05.835Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, session_timestamp=2021-01-10T01:40:05.835Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,958Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=6be271e8-dc62-4af1-9e45-cd57efb4c7aa, invocation_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, invocation_timestamp=2021-01-10T01:40:05.835Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, session_timestamp=2021-01-10T01:40:05.835Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,963Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=6be271e8-dc62-4af1-9e45-cd57efb4c7aa, invocation_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, invocation_timestamp=2021-01-10T01:40:05.835Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6fa9ce7-5107-48c9-a66e-dc0b1f6b5dd2, session_timestamp=2021-01-10T01:40:05.835Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,969Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=5b3310d4-b0e5-4bc9-9b0d-fcf8d4633b7d, invocation_id=f9959711-fd64-46db-9bfa-c174639e9a7d, invocation_timestamp=2021-01-10T01:40:05.749Z, origin=Only For Testing, session_id=f9959711-fd64-46db-9bfa-c174639e9a7d, session_timestamp=2021-01-10T01:40:05.749Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,969Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=5b3310d4-b0e5-4bc9-9b0d-fcf8d4633b7d, invocation_id=f9959711-fd64-46db-9bfa-c174639e9a7d, invocation_timestamp=2021-01-10T01:40:05.749Z, origin=Only For Testing, session_id=f9959711-fd64-46db-9bfa-c174639e9a7d, session_timestamp=2021-01-10T01:40:05.749Z, thread-id=1416, tx_id=339C770C4761233B398EE9532149151EC725E8E81763096E90E1700794FDC7BD}
[INFO ] 2021-01-10T01:40:05,979Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2021-01-10T01:40:05,983Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:05,983Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:05,983Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2021-01-10T01:40:05,987Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:05,987Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:05,988Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2021-01-10T01:40:05,992Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:05,992Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:06,041Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/0/cordapps] {}
[INFO ] 2021-01-10T01:40:06,041Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/0/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/0/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:06,042Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/0/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:06,046Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/0/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:06,062Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:06,063Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:06,064Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:06,068Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:06,073Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:05.993Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:06,300Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:06,305Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:06,305Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:06,381Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:06,383Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:06,383Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242806383) {}
[INFO ] 2021-01-10T01:40:06,384Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:06,392Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242806383) {}
[INFO ] 2021-01-10T01:40:06,397Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:06,398Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:06,398Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:06,400Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242806383) {}
[INFO ] 2021-01-10T01:40:06,402Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:06,418Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:06,420Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-01-10T01:40:06,428Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242806383) {}
[INFO ] 2021-01-10T01:40:06,428Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242806383) {}
[INFO ] 2021-01-10T01:40:06,428Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:06,428Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242806383) {}
[INFO ] 2021-01-10T01:40:06,428Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:06,433Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/1/cordapps] {}
[INFO ] 2021-01-10T01:40:06,433Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/1/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/1/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:06,433Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/1/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:06,438Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/1/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:06,451Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:06,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:06,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:06,473Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:06,474Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:05.993Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:06,628Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:06,629Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:06,629Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:06,697Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:06,698Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:06,707Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:06,708Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242806708) {}
[INFO ] 2021-01-10T01:40:06,708Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:06,711Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242806708) {}
[INFO ] 2021-01-10T01:40:06,713Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:06,714Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:06,714Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:06,715Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242806708) {}
[INFO ] 2021-01-10T01:40:06,717Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:06,731Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:06,739Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242806708) {}
[INFO ] 2021-01-10T01:40:06,739Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242806383) {}
[INFO ] 2021-01-10T01:40:06,740Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:06,744Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242806708) {}
[INFO ] 2021-01-10T01:40:06,744Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:06,748Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242806708) {}
[INFO ] 2021-01-10T01:40:06,748Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:06,748Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242806708) {}
[INFO ] 2021-01-10T01:40:06,748Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:06,753Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/2/cordapps] {}
[INFO ] 2021-01-10T01:40:06,753Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/2/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/2/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:06,753Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/2/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:06,758Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014005.993-DC23BC8D6A5D8311/nodes/2/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:06,775Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:06,775Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:06,776Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:06,790Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:06,790Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:05.993Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:06,943Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:06,943Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:06,943Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:06,999Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:07,000Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:07,010Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:07,010Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242807010) {}
[INFO ] 2021-01-10T01:40:07,011Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:07,014Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242807010) {}
[INFO ] 2021-01-10T01:40:07,016Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:07,017Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:07,017Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:07,019Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242807010) {}
[INFO ] 2021-01-10T01:40:07,021Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:07,034Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:07,042Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242807010) {}
[INFO ] 2021-01-10T01:40:07,042Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242806383) {}
[INFO ] 2021-01-10T01:40:07,042Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:07,046Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242807010) {}
[INFO ] 2021-01-10T01:40:07,047Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:07,051Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242806708) {}
[INFO ] 2021-01-10T01:40:07,051Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:07,055Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242807010) {}
[INFO ] 2021-01-10T01:40:07,055Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:07,059Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242807010) {}
[INFO ] 2021-01-10T01:40:07,059Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:07,059Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242807010) {}
[INFO ] 2021-01-10T01:40:07,059Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:07,159Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=4292fa4a-2a57-4146-bd1f-cb35b3bc0156, invocation_id=c6dc6363-f486-4728-8291-3125e54a0a39, invocation_timestamp=2021-01-10T01:40:07.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6dc6363-f486-4728-8291-3125e54a0a39, session_timestamp=2021-01-10T01:40:07.149Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,167Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=4292fa4a-2a57-4146-bd1f-cb35b3bc0156, invocation_id=c6dc6363-f486-4728-8291-3125e54a0a39, invocation_timestamp=2021-01-10T01:40:07.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6dc6363-f486-4728-8291-3125e54a0a39, session_timestamp=2021-01-10T01:40:07.149Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,233Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=911e9571-5563-45ac-b2f2-f500a92dee06, invocation_id=472bb8e2-4a87-4e89-b880-81e1f79ea88a, invocation_timestamp=2021-01-10T01:40:07.060Z, origin=Only For Testing, session_id=472bb8e2-4a87-4e89-b880-81e1f79ea88a, session_timestamp=2021-01-10T01:40:07.060Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,233Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=911e9571-5563-45ac-b2f2-f500a92dee06, invocation_id=472bb8e2-4a87-4e89-b880-81e1f79ea88a, invocation_timestamp=2021-01-10T01:40:07.060Z, origin=Only For Testing, session_id=472bb8e2-4a87-4e89-b880-81e1f79ea88a, session_timestamp=2021-01-10T01:40:07.060Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,243Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=911e9571-5563-45ac-b2f2-f500a92dee06, invocation_id=472bb8e2-4a87-4e89-b880-81e1f79ea88a, invocation_timestamp=2021-01-10T01:40:07.060Z, origin=Only For Testing, session_id=472bb8e2-4a87-4e89-b880-81e1f79ea88a, session_timestamp=2021-01-10T01:40:07.060Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,255Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=4292fa4a-2a57-4146-bd1f-cb35b3bc0156, invocation_id=c6dc6363-f486-4728-8291-3125e54a0a39, invocation_timestamp=2021-01-10T01:40:07.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6dc6363-f486-4728-8291-3125e54a0a39, session_timestamp=2021-01-10T01:40:07.149Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,260Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=4292fa4a-2a57-4146-bd1f-cb35b3bc0156, invocation_id=c6dc6363-f486-4728-8291-3125e54a0a39, invocation_timestamp=2021-01-10T01:40:07.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6dc6363-f486-4728-8291-3125e54a0a39, session_timestamp=2021-01-10T01:40:07.149Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,262Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=4292fa4a-2a57-4146-bd1f-cb35b3bc0156, invocation_id=c6dc6363-f486-4728-8291-3125e54a0a39, invocation_timestamp=2021-01-10T01:40:07.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6dc6363-f486-4728-8291-3125e54a0a39, session_timestamp=2021-01-10T01:40:07.149Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,266Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=4292fa4a-2a57-4146-bd1f-cb35b3bc0156, invocation_id=c6dc6363-f486-4728-8291-3125e54a0a39, invocation_timestamp=2021-01-10T01:40:07.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c6dc6363-f486-4728-8291-3125e54a0a39, session_timestamp=2021-01-10T01:40:07.149Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,272Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=911e9571-5563-45ac-b2f2-f500a92dee06, invocation_id=472bb8e2-4a87-4e89-b880-81e1f79ea88a, invocation_timestamp=2021-01-10T01:40:07.060Z, origin=Only For Testing, session_id=472bb8e2-4a87-4e89-b880-81e1f79ea88a, session_timestamp=2021-01-10T01:40:07.060Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,272Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=911e9571-5563-45ac-b2f2-f500a92dee06, invocation_id=472bb8e2-4a87-4e89-b880-81e1f79ea88a, invocation_timestamp=2021-01-10T01:40:07.060Z, origin=Only For Testing, session_id=472bb8e2-4a87-4e89-b880-81e1f79ea88a, session_timestamp=2021-01-10T01:40:07.060Z, thread-id=1767, tx_id=12E715CA8E6E553A7D6063A94951725B0DE421B68103068FF7767D9F9B981D0B}
[INFO ] 2021-01-10T01:40:07,312Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2021-01-10T01:40:07,317Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:07,317Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:07,318Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2021-01-10T01:40:07,321Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:07,321Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:07,322Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2021-01-10T01:40:07,326Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:07,326Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:07,373Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/0/cordapps] {}
[INFO ] 2021-01-10T01:40:07,373Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/0/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/0/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:07,373Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/0/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:07,378Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/0/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:07,391Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:07,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:07,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:07,395Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:07,398Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:07.327Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:07,593Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:07,598Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:07,598Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:07,655Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-01-10T01:40:07,658Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:07,658Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242807658) {}
[INFO ] 2021-01-10T01:40:07,659Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:07,665Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242807658) {}
[INFO ] 2021-01-10T01:40:07,670Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:07,670Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:07,670Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:07,673Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242807658) {}
[INFO ] 2021-01-10T01:40:07,676Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:07,694Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:07,695Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-01-10T01:40:07,702Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242807658) {}
[INFO ] 2021-01-10T01:40:07,702Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242807658) {}
[INFO ] 2021-01-10T01:40:07,702Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:07,702Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242807658) {}
[INFO ] 2021-01-10T01:40:07,702Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:07,707Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/1/cordapps] {}
[INFO ] 2021-01-10T01:40:07,707Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/1/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/1/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:07,707Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/1/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:07,712Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/1/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:07,726Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:07,727Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:07,727Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:07,742Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:07,743Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:07.327Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:07,892Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:07,893Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:07,893Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:07,948Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:07,949Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:07,959Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:07,959Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242807959) {}
[INFO ] 2021-01-10T01:40:07,959Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:07,962Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242807959) {}
[INFO ] 2021-01-10T01:40:07,965Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:07,965Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:07,965Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:07,966Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242807959) {}
[INFO ] 2021-01-10T01:40:07,968Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:07,981Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:07,988Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242807959) {}
[INFO ] 2021-01-10T01:40:07,988Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242807658) {}
[INFO ] 2021-01-10T01:40:07,988Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:07,991Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242807959) {}
[INFO ] 2021-01-10T01:40:07,992Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:07,995Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242807959) {}
[INFO ] 2021-01-10T01:40:07,995Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:07,995Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242807959) {}
[INFO ] 2021-01-10T01:40:07,995Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:08,000Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/2/cordapps] {}
[INFO ] 2021-01-10T01:40:08,000Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/2/cordapps/workflows.jar, rootPackageName=null), RestrictedURL(url=file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/2/cordapps/contracts.jar, rootPackageName=null) {}
[INFO ] 2021-01-10T01:40:08,000Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/2/cordapps/workflows.jar {}
[INFO ] 2021-01-10T01:40:08,005Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/mrjain/yellow-webserver/workflows/build/mock-network/20210110-014007.327-891FD03C5BFC52D1/nodes/2/cordapps/contracts.jar {}
[INFO ] 2021-01-10T01:40:08,018Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:08,019Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-01-10T01:40:08,019Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-01-10T01:40:08,034Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-01-10T01:40:08,035Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-01-10T01:40:07.327Z
      epoch=1
  } {}
[INFO ] 2021-01-10T01:40:08,202Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-01-10T01:40:08,203Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:08,203Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:08,254Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-01-10T01:40:08,254Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-01-10T01:40:08,264Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-01-10T01:40:08,264Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242808264) {}
[INFO ] 2021-01-10T01:40:08,265Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:08,268Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242808264) {}
[INFO ] 2021-01-10T01:40:08,270Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-01-10T01:40:08,271Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-01-10T01:40:08,271Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-01-10T01:40:08,272Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242808264) {}
[INFO ] 2021-01-10T01:40:08,274Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:08,294Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=4CF2C281FCE13856999867D947BCAD43FADAAA69C72A31352ACCFD7757CEF67E uploader=app filename=Cordapp-example Contracts {}
[INFO ] 2021-01-10T01:40:08,301Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242808264) {}
[INFO ] 2021-01-10T01:40:08,301Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1610242807658) {}
[INFO ] 2021-01-10T01:40:08,301Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-01-10T01:40:08,305Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242808264) {}
[INFO ] 2021-01-10T01:40:08,305Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:08,309Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1610242807959) {}
[INFO ] 2021-01-10T01:40:08,309Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:08,314Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242808264) {}
[INFO ] 2021-01-10T01:40:08,315Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-01-10T01:40:08,319Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242808264) {}
[INFO ] 2021-01-10T01:40:08,319Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:08,319Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1610242808264) {}
[INFO ] 2021-01-10T01:40:08,319Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-01-10T01:40:08,379Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=cec04319-8481-4eba-84d3-6876381f94e2, invocation_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, invocation_timestamp=2021-01-10T01:40:08.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, session_timestamp=2021-01-10T01:40:08.369Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,387Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=cec04319-8481-4eba-84d3-6876381f94e2, invocation_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, invocation_timestamp=2021-01-10T01:40:08.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, session_timestamp=2021-01-10T01:40:08.369Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,449Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=a16eb67b-8528-4eef-9466-996c90a2f79b, invocation_id=264f890c-0134-4e8a-98c6-2766e3a1a4c3, invocation_timestamp=2021-01-10T01:40:08.320Z, origin=Only For Testing, session_id=264f890c-0134-4e8a-98c6-2766e3a1a4c3, session_timestamp=2021-01-10T01:40:08.320Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,449Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=a16eb67b-8528-4eef-9466-996c90a2f79b, invocation_id=264f890c-0134-4e8a-98c6-2766e3a1a4c3, invocation_timestamp=2021-01-10T01:40:08.320Z, origin=Only For Testing, session_id=264f890c-0134-4e8a-98c6-2766e3a1a4c3, session_timestamp=2021-01-10T01:40:08.320Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,460Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=a16eb67b-8528-4eef-9466-996c90a2f79b, invocation_id=264f890c-0134-4e8a-98c6-2766e3a1a4c3, invocation_timestamp=2021-01-10T01:40:08.320Z, origin=Only For Testing, session_id=264f890c-0134-4e8a-98c6-2766e3a1a4c3, session_timestamp=2021-01-10T01:40:08.320Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,471Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=cec04319-8481-4eba-84d3-6876381f94e2, invocation_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, invocation_timestamp=2021-01-10T01:40:08.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, session_timestamp=2021-01-10T01:40:08.369Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,476Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=cec04319-8481-4eba-84d3-6876381f94e2, invocation_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, invocation_timestamp=2021-01-10T01:40:08.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, session_timestamp=2021-01-10T01:40:08.369Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,478Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=cec04319-8481-4eba-84d3-6876381f94e2, invocation_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, invocation_timestamp=2021-01-10T01:40:08.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, session_timestamp=2021-01-10T01:40:08.369Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,483Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=cec04319-8481-4eba-84d3-6876381f94e2, invocation_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, invocation_timestamp=2021-01-10T01:40:08.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e65800a-1ee7-4f02-adb3-253ab93d599d, session_timestamp=2021-01-10T01:40:08.369Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,489Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=a16eb67b-8528-4eef-9466-996c90a2f79b, invocation_id=264f890c-0134-4e8a-98c6-2766e3a1a4c3, invocation_timestamp=2021-01-10T01:40:08.320Z, origin=Only For Testing, session_id=264f890c-0134-4e8a-98c6-2766e3a1a4c3, session_timestamp=2021-01-10T01:40:08.320Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,489Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=a16eb67b-8528-4eef-9466-996c90a2f79b, invocation_id=264f890c-0134-4e8a-98c6-2766e3a1a4c3, invocation_timestamp=2021-01-10T01:40:08.320Z, origin=Only For Testing, session_id=264f890c-0134-4e8a-98c6-2766e3a1a4c3, session_timestamp=2021-01-10T01:40:08.320Z, thread-id=2118, tx_id=60C3DA53458C5A9DB65E08AA95788C036A4A6840D55DBA2DA93720373CAB3DBD}
[INFO ] 2021-01-10T01:40:08,495Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2021-01-10T01:40:08,499Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:08,499Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:08,499Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2021-01-10T01:40:08,503Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:08,503Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-01-10T01:40:08,503Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2021-01-10T01:40:08,507Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-01-10T01:40:08,507Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
